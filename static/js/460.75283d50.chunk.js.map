{"version":3,"file":"static/js/460.75283d50.chunk.js","mappings":"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","sources":["webpack://network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.js","components/Profile/ProfileContainer.js","redux/state.js","utils/validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__9dlNL\",\"img\":\"ProfileInfo_img__upLA5\"};","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChenge = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { \r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status}</span>\r\n                </div>\r\n            }\r\n            {\r\n                false && <div>\r\n                    <input onChange={onStatusChenge} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../../assets/image/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if(!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={s.descriptionBlock}>\r\n            <img src={profile.photos.large} alt=''/>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__j79JW\",\"posts\":\"MyPosts_posts__S-3D9\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__BfhkL\"};","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n            <div className={s.item}>\r\n                <img src='https://bipbap.ru/wp-content/uploads/2021/07/9-1.jpeg'/>\r\n                {props.posts}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength300 = maxLengthCreator(300);\r\n\r\nlet AddNewPostsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newPostText'} validate={[required, maxLength300]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddNewPostsForm = reduxForm({form: 'ProfileAddNewPostsForm'})(AddNewPostsForm);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    const postsElements = [...props.posts]//делаем копию массива чтоб не менять state\r\n    .reverse()//переворачиваем последовательность постов\r\n    .map( p => <Post key={p.id} id={p.id} message={p.message} likesCount={p.likesCount} />);\r\n    //const newPostElement = React.createRef();\r\n\r\n    const onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostsForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/state\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {getUserProfile, getStatus, updateStatus} from '../../redux/profile-reducer';\r\nimport { withRouter } from '../hoc/withRouter';\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.autorizerUserId;\r\n            if(!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        \r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizerUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);","import profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst UPDATE_NEW_MESSAGE_BODY = 'NEW-MESSAGE-BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nconst store = {\r\n    _state: {\r\n\r\n        profilePage: {\r\n            posts: [\r\n                {id: 1, post: 'hi', likesCount: 12},\r\n                {id: 2, post: 'by', likesCount: 120},\r\n            ],\r\n            newPostText: 'Dima'\r\n        },\r\n\r\n        dialogsPage: {\r\n            dialogs:  [\r\n                {id: 1, name: 'Dima'},\r\n                {id: 2, name: 'Katy'},\r\n                {id: 3, name: 'Vova'},\r\n                {id: 4, name: 'Tany'}\r\n            ],\r\n            messages: [\r\n                {id: 1, message: 'hy'},\r\n                {id: 2, message: 'by'},\r\n                {id: 3, message: 'hy'},\r\n                {id: 4, message: 'by'}\r\n            ],\r\n            newMessageBody: ''\r\n        }\r\n    },\r\n    _callSubscriber() {\r\n        console.log('mdd,fm');\r\n    },\r\n\r\n    getState() {\r\n        return this._state\r\n    },\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer;\r\n    },\r\n\r\n    dispatch(action) {\r\n       this._state.profilePage = profileReducer(this._state.profilePage, action);\r\n       this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action);\r\n       this._callSubscriber(this._state)\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = () => {\r\n    return {\r\n        type: ADD_POST,\r\n    }\r\n}\r\n\r\nexport const updateNewPostTextActionCreator = (text) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText: text\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = () => {\r\n    return {\r\n        type: SEND_MESSAGE\r\n    }\r\n}\r\n\r\nexport const updateNewMessageBodyCreator = (body) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_BODY,\r\n        body: body\r\n    }\r\n}\r\n\r\nexport default store;","export const required = (value) => {\r\n    if(value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}"],"names":["props","useState","setEditMode","status","setStatus","useEffect","onDoubleClick","profile","updateStatus","className","s","src","photos","large","alt","Preloader","posts","maxLength300","maxLengthCreator","AddNewPostsForm","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","reduxForm","form","React","postsElements","reverse","map","p","id","message","likesCount","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileContainer","userId","this","match","params","autorizerUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter","type","sendMessageCreator","value","maxLength","length"],"sourceRoot":""}